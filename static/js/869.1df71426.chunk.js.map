{"version":3,"file":"static/js/869.1df71426.chunk.js","mappings":"wNAIaA,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAMvBC,GAAwBC,EAAAA,EAAAA,IACnC,CAH0B,SAAAJ,GAAK,OAAIA,EAAMK,MAAV,EANH,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,IAUjC,SAACD,EAAQJ,GACP,IAAMM,EAAmBF,EAAOG,OAAOC,cACvC,OAAOR,EAASI,QAAO,SAAAK,GAAO,OAC5BA,EAAQC,KAAKH,OAAOC,cAAcG,SAASL,EADf,GAG/B,I,uCCfUM,EAAeC,EAAAA,GAAAA,GAAH,qGAIN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAeJ,EAAAA,GAAAA,KAAH,0DAEd,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAGCC,EAAgBP,EAAAA,GAAAA,KAAH,qGAGT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAECE,EAAYR,EAAAA,GAAAA,OAAH,mWAGL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGC,SAAAF,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,MAAlB,IACT,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,KAAnB,IACU,SAAAV,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAKC,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,KAAnB,IACZ,SAAAV,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,I,SCxBDM,EAAU,SAAC,GAAiB,IAAfhB,EAAc,EAAdA,QAClBiB,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAACf,EAAD,YACE,UAACK,EAAD,WAAeR,EAAQC,KAAvB,QACA,SAACU,EAAD,UAAgBX,EAAQmB,SACxB,SAACP,EAAD,CAAWQ,QAVM,WACnBH,GAASI,EAAAA,EAAAA,IAAcrB,EAAQsB,KAC5BC,SACAC,MAAK,kBAAMC,EAAAA,OAAAA,QAAe,sBAArB,IACLC,OAAM,kBAAMD,EAAAA,OAAAA,QAAe,oCAArB,GACV,EAKqC,aAAW,SAA7C,sBAKL,EC1BYE,EAAoBvB,EAAAA,GAAAA,GAAH,kJAKX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPqB,EAAexB,EAAAA,GAAAA,EAAH,uCACd,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,ICACmB,EAAe,WAC1B,IAAMtC,GAAWuC,EAAAA,EAAAA,IAAYrC,GACvBD,GAAYsC,EAAAA,EAAAA,IAAYzC,GAE9B,OACE,gCACuB,IAApBE,EAASwC,SAAiBvC,IACzB,SAACoC,EAAD,uCAEF,SAACD,EAAD,UACGpC,EAASyC,KAAI,SAAAhC,GACZ,OAAO,SAACgB,EAAD,CAA0BM,GAAItB,EAAQsB,GAAItB,QAASA,GAArCA,EAAQsB,GAC9B,QAIR,E,UCrBOW,EAAWC,EAAQ,MAAnBD,OAmBR,EAjBiB,WACf,IAAMhB,GAAWC,EAAAA,EAAAA,MAOjB,OAJAiB,EAAAA,EAAAA,YAAU,WACRlB,GAASmB,EAAAA,EAAAA,MACV,GAAE,CAACnB,KAGF,iCACE,SAACgB,EAAD,WACE,gDAEF,SAACJ,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","page/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.trim().toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  width: 500px;\n  height: 40px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const ContactsName = styled.span`\n  margin-left: 0;\n  color: ${p => p.theme.colors.accentColor};\n`;\n\nexport const ContactsPhone = styled.span`\n  flex-grow: 1;\n  text-align: right;\n  margin-left: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.accentColor};\n`;\nexport const DeleteBtn = styled.button`\n  height: 30px;\n\n  margin-left: ${p => p.theme.space[4]}px;\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ContactsItem,\n  ContactsName,\n  ContactsPhone,\n  DeleteBtn,\n} from 'components/Contact/Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id))\n      .unwrap()\n      .then(() => Notify.success('You delete contact!'))\n      .catch(() => Notify.failure('Something went wrong...Try again!'));\n  };\n  return (\n    <ContactsItem>\n      <ContactsName>{contact.name}:</ContactsName>\n      <ContactsPhone>{contact.phone}</ContactsPhone>\n      <DeleteBtn onClick={handleDelete} aria-label=\"delete\">\n        Delete\n      </DeleteBtn>\n    </ContactsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsListSTyle = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Notification = styled.p`\n  color: ${p => p.theme.colors.accentColor};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport {\n  ContactsListSTyle,\n  Notification,\n} from 'components/ContactsList/ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {contacts.length === 0 && !isLoading && (\n        <Notification>Sorry,there no contact!</Notification>\n      )}\n      <ContactsListSTyle>\n        {contacts.map(contact => {\n          return <Contact key={contact.id} id={contact.id} contact={contact} />;\n        })}\n      </ContactsListSTyle>\n    </>\n  );\n};\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { selectIsLoading } from 'redux/contacts/selectors';\n\nconst { Helmet } = require('react-helmet');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["selectIsLoading","state","contacts","isLoading","selectVisibleContacts","createSelector","filter","items","normalizedFilter","trim","toLowerCase","contact","name","includes","ContactsItem","styled","p","theme","space","ContactsName","colors","accentColor","ContactsPhone","DeleteBtn","radii","normal","white","Contact","dispatch","useDispatch","phone","onClick","deleteContact","id","unwrap","then","Notify","catch","ContactsListSTyle","Notification","ContactsList","useSelector","length","map","Helmet","require","useEffect","fetchContacts"],"sourceRoot":""}