{"version":3,"file":"static/js/253.0e9874c6.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.jsx","../node_modules/nanoid/index.browser.js","page/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  width: 500px;\n  height: 40px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const ContactsName = styled.span`\n  margin-left: 0;\n  color: ${p => p.theme.colors.accentColor};\n`;\n\nexport const ContactsPhone = styled.span`\n  flex-grow: 1;\n  text-align: right;\n  margin-left: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.accentColor};\n`;\nexport const DeleteBtn = styled.button`\n  height: 30px;\n\n  margin-left: ${p => p.theme.space[4]}px;\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ContactsItem,\n  ContactsName,\n  ContactsPhone,\n  DeleteBtn,\n} from 'components/Contact/Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id))\n      .unwrap()\n      .then(() => Notify.success('You delete contact!'))\n      .catch(() => Notify.failure('Something went wrong...Try again!'));\n  };\n  return (\n    <ContactsItem>\n      <ContactsName>{contact.name}:</ContactsName>\n      <ContactsPhone>{contact.number}</ContactsPhone>\n      <DeleteBtn onClick={handleDelete} aria-label=\"delete\">\n        Delete\n      </DeleteBtn>\n    </ContactsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsListSTyle = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Notification = styled.p`\n  color: ${p => p.theme.colors.accentColor};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport {\n  ContactsListSTyle,\n  Notification,\n} from 'components/ContactsList/ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {contacts.length === 0 && !isLoading && (\n        <Notification>Sorry,there no contact!</Notification>\n      )}\n\n      <ContactsListSTyle>\n        {contacts.map(contact => {\n          return <Contact key={contact.id} id={contact.id} contact={contact} />;\n        })}\n      </ContactsListSTyle>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.colors.accentColor};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.accentColor};\n  &:focus-within {\n    outline: none;\n  }\n  &:not(:placeholder-shown) {\n    color: ${p => p.theme.colors.accentColor};\n  }\n  &::placeholder {\n    color: ${p => p.theme.colors.accentColor};\n  }\n  &:hover::-webkit-input-placeholder {\n    color: ${p => p.theme.colors.accentColor};\n  }\n  &:hover {\n    border-bottom: 0.5px solid ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const AddBtn = styled.button`\n  width: 250px;\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { nanoid } from 'nanoid';\n\nimport {\n  Label,\n  Input,\n  Wrapper,\n} from 'components/FilterContacts/FilterContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterContacts } from 'redux/filtersSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const FilterContacts = () => {\n  const filterId = nanoid();\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Label htmlFor={filterId}>\n        <Input\n          type=\"text\"\n          title=\"Write name to find contact quickly\"\n          value={filter}\n          onChange={e => dispatch(setFilterContacts(e.target.value))}\n          id={filterId}\n        ></Input>\n      </Label>\n    </Wrapper>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectIsLoading,\n  selectContacts,\n  selectError,\n} from 'redux/contacts/selectors';\n\nconst { Helmet } = require('react-helmet');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {contacts.length > 1 && <FilterContacts />}\n      {isLoading && !error && <p>Request on progress...</p>}\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["ContactsItem","styled","p","theme","space","ContactsName","colors","accentColor","ContactsPhone","DeleteBtn","radii","normal","white","Contact","contact","dispatch","useDispatch","name","number","onClick","deleteContact","id","unwrap","then","Notify","catch","ContactsListSTyle","Notification","ContactsList","contacts","useSelector","selectVisibleContacts","isLoading","selectIsLoading","length","map","Wrapper","Label","fontWeights","bold","Input","fontSizes","m","FilterContacts","filterId","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","filter","selectFilter","htmlFor","type","title","value","onChange","e","setFilterContacts","target","Helmet","require","selectContacts","error","selectError","useEffect","fetchContacts"],"sourceRoot":""}